{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","placeholder","onChange","target","getGifs","category","a","console","log","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGif","imagen","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMA6CeA,EAzCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGDC,mBAAS,IAHR,mBAG9BC,EAH8B,KAGlBC,EAHkB,KAoBrC,OAEI,sBAAMC,SAZS,SAACC,GAChBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAMlB,SAEI,uBACKO,KAAK,OACLC,MAAOT,EACPU,YAAY,kBACZC,SAvBW,SAACR,GACrBF,EAAcE,EAAES,OAAOH,a,+BCPlBI,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DAClBC,QAAQC,IAAIH,GACNI,EAFY,iDAEkCC,UAAUL,GAF5C,+DAGDM,MAAMF,GAHL,cAGZG,EAHY,gBAICA,EAAKC,OAJN,uBAIXC,EAJW,EAIXA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EAEtB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAXvB,kBAgBXM,GAhBW,4CAAF,sDCDPO,EAAc,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAGlC,OADAF,QAAQC,IAAI,CAACU,KAAGC,QAAMV,QAElB,sBAAKc,UAAU,2DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFd,SAACA,GAAY,IAAD,EAEPf,mBAAS,CAC/BwB,KAAK,GACLa,SAAQ,IAJqB,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAwBjC,OAhBAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAd,GAEEY,EAAS,CACLf,KAAKG,EACLU,SAAQ,SAM1B,CAACtB,IAGIuB,EDnBqBI,CAAY3B,GAA5Be,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QAOnB,OACI,qCACA,6BAAKtB,IACJsB,GAAW,0CACZ,qBAAKJ,UAAU,YAAf,SAIWH,EAAOJ,KAAI,SAAAiB,GAAM,OAEZ,cAAC,EAAD,eAEIA,GADCA,EAAOf,aErBvBgB,EAAa,WAAI,MAGU5C,mBAAS,CAAC,eAHpB,mBAGnB6C,EAHmB,KAGP9C,EAHO,KAW1B,OACI,qCACI,8CAEA,cAAE,EAAF,CAAcA,cAAeA,IAC7B,uBAEA,6BAEM8C,EAAWnB,KAAI,SAAAX,GAAQ,OAErB,cAAC,EAAD,CAGIA,SAAUA,GADLA,Y,MCxB7B+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.172bd0ac.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    // useState() --> undefined\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input\r\n                 type=\"text\" //placeholder={inputValue}\r\n                 value={inputValue}\r\n                 placeholder='Busque sus gifs'\r\n                 onChange={handleInputChange}\r\n            />\r\n\r\n        </form>\r\n     \r\n    )\r\n    \r\n \r\n}\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","\r\n\r\n\r\nexport const getGifs =async(category)=>{\r\n    console.log(category)\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=KEZh9NDvVRHY7GAOMdvKtWPvLDmF9RAd`;\r\n    const resp=await fetch(url);\r\n    const {data}=await resp.json();\r\n\r\n    const gifs= data.map(img=>{\r\n\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url,\r\n        }\r\n    }\r\n    )\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url} ) => {\r\n\r\n    console.log({id,title,url});\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp animate__faster\" >\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useFetchGif} from '../hooks/useFetchGif'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    \r\n    const {data:images,loading}=useFetchGif(category);\r\n\r\n\r\n\r\n    // getGifs();\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading && <p>Loading..</p> }\r\n        <div className=\"card-grid\">\r\n           \r\n\r\n               {\r\n                   images.map(imagen=>(\r\n\r\n                        <GifGridItem\r\n                        key={imagen.id}\r\n                        {...imagen}\r\n                        />\r\n                        \r\n                   ))\r\n               }\r\n        \r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport  { getGifs } from '../components/helpers/getGifs'\r\n\r\nexport const useFetchGif=(category)=>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then(img=>{\r\n\r\n                    setState({\r\n                        data:img,\r\n                        loading:false\r\n                    });\r\n\r\n\r\n            })\r\n\r\n    },[category])\r\n\r\n \r\n    return state; // devuevle el arreglo vacio y loading\r\n}","import  { useState } from \"react\";\r\nimport  AddCategory  from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nexport const GifExpertApp=()=>{\r\n    // const categories= ['Evangelion','Dragon ball','One piece']\r\n\r\n    const [categories, setCategories] = useState(['Evangelion']);\r\n\r\n    // const handleAdd=(e)=>{\r\n    //      const anime= 'pokemon';\r\n    //     setCategories([...categories,anime]);\r\n    //     setCategories(categories.concat(anime));\r\n    // }\r\n\r\n    return(\r\n        <> \r\n            <h2>GifExpertApp</h2>\r\n            \r\n            < AddCategory setCategories={setCategories}/>     \r\n            <hr></hr>\r\n\r\n            <ol>\r\n                { \r\n                  categories.map(category => (\r\n                    \r\n                    <GifGrid \r\n                    \r\n                        key={category}\r\n                        category={category}\r\n\r\n                    />\r\n\r\n                  )\r\n                \r\n                ) \r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />\n,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}